<?php

namespace ContainerF7tV8QJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Workflow_ProductPublishing_Listener_AuditTrailService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.workflow.Product_publishing.listener.audit_trail' shared service.
     *
     * @return \Symfony\Component\Workflow\EventListener\AuditTrailListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'workflow'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'AuditTrailListener.php';

        $a = new \Symfony\Bridge\Monolog\Logger('workflow');
        $a->pushProcessor(($container->privates['debug.log_processor'] ?? $container->getDebug_LogProcessorService()));
        $a->pushHandler(($container->privates['monolog.handler.console'] ?? $container->getMonolog_Handler_ConsoleService()));
        $a->pushHandler(($container->privates['monolog.handler.main'] ?? $container->getMonolog_Handler_MainService()));
        \Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass::configureLogger($a);

        return $container->privates['.workflow.Product_publishing.listener.audit_trail'] = new \Symfony\Component\Workflow\EventListener\AuditTrailListener($a);
    }
}
